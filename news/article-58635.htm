<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashxw.github.io/news/article-58635.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>golang实现简单工厂、方法工厂、抽象工厂三种设计模式_Golang</title>
        <meta name="description" content="1、简单工厂： 第一步：创建一个文章接口，需要实现阅读和写作的功能。  type Article interface {  	ReadArticle() string  	WriteArticle(c" />
        <link rel="icon" href="/assets/website/img/clashxw/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash XW免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashxw.github.io/news/article-58635.htm" />
    <meta property="og:site_name" content="Clash XW免费机场节点分享官网" />
    <meta property="og:title" content="golang实现简单工厂、方法工厂、抽象工厂三种设计模式_Golang" />
    <meta property="og:image" content="https://clashxw.github.io/uploads/20241223/a01bde3a26c462073260e699a16947f1.webp" />
        <meta property="og:release_date" content="2025-02-18T09:44:32" />
    <meta property="og:updated_time" content="2025-02-18T09:44:32" />
        <meta property="og:description" content="1、简单工厂： 第一步：创建一个文章接口，需要实现阅读和写作的功能。  type Article interface {  	ReadArticle() string  	WriteArticle(c" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="golang实现简单工厂、方法工厂、抽象工厂三种设计模式_Golang">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- all css here -->
    <link rel="stylesheet" href="/assets/website/css/clashxw/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashxw/icons.css">
    <link rel="stylesheet" href="/assets/website/css/clashxw/plugins.css">
    <link rel="stylesheet" href="/assets/website/css/clashxw/style.css">
    <link rel="stylesheet" href="/assets/website/css/clashxw/responsive.css">
    <script src="/assets/website/js/frontend/clashxw/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8ZT78WPNQW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8ZT78WPNQW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- header start -->
    <header class="header-area transparent-bar header-black">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-4 col-5 col-sm-4">
                    <div class="logo">
                        <a href="/">
                                                        <span>Clash XW</span>
                                                    </a>
                    </div>
                </div>
                <div class="col-lg-9 col-md-8 col-7 col-sm-8">
                    <div class="menu-search-bundle">
                        <div class="main-menu">
                            <nav>
                                <ul>
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </nav>
                        </div>
                    </div>
                </div>
                <div class="mobile-menu-area d-md-block d-block col-md-12 col-lg-12 col-12 d-lg-none d-xl-none">
                    <div class="mobile-menu">
                        <nav id="mobile-menu-active">
                            <ul class="menu-overflow">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="breadcrumb-area bg-img ptb-80" style="background-image:url(/assets/website/img/clashxw/banner/breath.jpg);">
        <div class="container">
            <div class="breadcrumb-content text-center">
                <h1>golang实现简单工厂、方法工厂、抽象工厂三种设计模式_Golang</h1>
                <ul>
                    <li>
                        <a href="/">首页</a>
                    </li>
                    <li>
                        <a href="/news/">新闻资讯</a>
                    </li>
                    <li class="active">正文</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="about-area ptb-95">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<h2>1、简单工厂：</h2> <p>第一步：创建一个文章接口，需要实现阅读和写作的功能。</p> <div class="ay1code"> <pre class="brush:plain;">type Article interface {  	ReadArticle() string  	WriteArticle(contents string) string  }</pre> </div> <p>第二步：创建 中文书 和 英文书 两个“类”，并且分别实现两种方法。（注：golang种没有类，只有组合。应贺总强调，特别说明）</p> <div class="ay1code"> <pre class="brush:plain;">type ChineseArticle struct{}  type EnglishArticle struct{}    func (c *ChineseArticle) ReadArticle() string {  	return "这是中文字符"  }  func (c *EnglishArticle) ReadArticle() string {  	return "this's English chars"  }  func (c *ChineseArticle) WriteArticle(contents string) string {  	return "写入了文章"  }  func (c *EnglishArticle) WriteArticle(contents string) string {  	return "wirted words"  }</pre> </div> <p>第三步：使用断言方式分配不同的参数，应该需要使用什么样的方法去实例化具体的类</p> <div class="ay1code"> <pre class="brush:plain;">func SFactory(lan string) (art Article) {  	switch lan {  	case "Chinese":  		art = &amp;ChineseArticle{}  	case "English":  		art = &amp;EnglishArticle{}  	default:  		art = &amp;ChineseArticle{}  	}  	return art  }</pre> </div> <p>第四步:使用</p> <div class="ay1code"> <pre class="brush:plain;">func main() {  	a := SFactory("Chinese")//这样，我实例化中文书还是英文书都可以了  	fmt.Println(a.ReadArticle())  }</pre> </div> <h3>总体结构如下图：</h3> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220419/f8b7553da224c9c41fadde4759cc0da1.jpg"></p> <h2>2、方法工厂：</h2> <p>第一步：同上， 来一个文章接口</p> <div class="ay1code"> <pre class="brush:plain;">type Article interface {  	ReadArticle() string  	WriteArticle(contents string) string  }</pre> </div> <p>第二步:来两种书。<code>需要实例化的类</code>。并且实现接口</p> <div class="ay1code"> <pre class="brush:plain;">type ChineseArticle struct{}  type EnglishArticle struct{}  //实现读写接口  func (c *ChineseArticle) ReadArticle() string {  	return "读书了"  }  func (c *EnglishArticle) ReadArticle() string {  	return "reading books"  }  func (c *ChineseArticle) WriteArticle(contents string) string {  	return "写书了"  }  func (c *EnglishArticle) WriteArticle(contents string) string {  	return "wirting books"  }</pre> </div> <p>第三步：创建两个用来创建“类”的“类”，以及其方法</p> <div class="ay1code"> <pre class="brush:plain;">type CreateEnglish struct{}  type CreateChinese struct{}  //方法工厂的核心。  func (cdb *CreateEnglish) CreateArticle() (len *EnglishArticle, err error) {  	len = &amp;EnglishArticle{}  	return len, nil  }  func (cdb *CreateChinese) CreateArticle() (len *ChineseArticle, err error) {  	len = &amp;ChineseArticle{}  	return len, nil  }</pre> </div> <p>第四步：使用</p> <div class="ay1code"> <pre class="brush:plain;">func main() {  	a := &amp;CreateChinese{}  	art, _ := a.CreateArticle()  	fmt.Println(art.WriteArticle("123"))  }</pre> </div> <p>总体结构如下：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220419/5d7328c31ee1df81e3b5d04afc421085.jpg"></p> <h2>抽象工厂</h2> <p>第一步：创建一个<code>book</code>，然后再创建一个能够创建book的<code>BookCompany</code>接口。</p> <div class="ay1code"> <pre class="brush:plain;">type BookCompany interface {  	Create() Book  }  type Book interface {  	ReadBook() string  	WriteBook() string  }</pre> </div> <p>第二步:创建两<code>book</code> 并且实现它</p> <div class="ay1code"> <pre class="brush:plain;">type EnglishBook struct{}  type ChineseBook struct{}  //实现book的功能  func (c *EnglishBook) ReadBook() string {  	return "reading a english book"  }  func (c *ChineseBook) ReadBook() string {  	return "读中文书"  }  func (c *EnglishBook) WriteBook() string {  	return "i'am writing"  }  func (c *ChineseBook) WriteBook() string {  	return "我在创作中"  }</pre> </div> <p>第三步：创建两个印刷厂</p> <div class="ay1code"> <pre class="brush:plain;">type BeiJinCompany struct{}  type ShanghaiCompany struct{}  //一个印刷场刷英语书，一个刷中文书  func (c *BeiJinCompany) Create() Book {  	return &amp;EnglishBook{}  }  func (c *ShanghaiCompany) Create() Book {  	return &amp;ChineseBook{}  }</pre> </div> <p>第四步：用起来</p> <div class="ay1code"> <pre class="brush:plain;">func main() {  	var f BookCompany  	f = new(BeiJinCompany)  	book := f.Create()  	fmt.Println(book.ReadBook())  }</pre> </div> <p>整体效果如下：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220419/3745ee7b789c04302daf3effc71ad53b.jpg"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-57940.htm">动物疫苗的种类有哪些图片及名称及价格 动物疫苗的种类有哪些图片及名称及价格表</a></p>
                                        <p>下一个：<a href="/news/article-58636.htm">免费领养宠物包邮是真的吗还是假的呀（宠物免费领养是什么意思）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-50323.htm" title="狐狸犬价钱（狐狸犬价值）">狐狸犬价钱（狐狸犬价值）</a></li>
                        <li class="py-2"><a href="/news/article-43825.htm" title="猫不打疫苗危险吗视频（猫不打疫苗有啥危害）">猫不打疫苗危险吗视频（猫不打疫苗有啥危害）</a></li>
                        <li class="py-2"><a href="/news/article-57374.htm" title="动物疫苗间隔多久打一次比较好呢图片（动物疫苗间隔多久打一次比较好呢图片）">动物疫苗间隔多久打一次比较好呢图片（动物疫苗间隔多久打一次比较好呢图片）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-27-free-node-subscribe-links.htm" title="1月27日→20.6M/S|2025年最新免费节点V2ray/Shadowrocket/Clash/SSR订阅链接地址">1月27日→20.6M/S|2025年最新免费节点V2ray/Shadowrocket/Clash/SSR订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-33085.htm" title="宠物领养协议书范本模板大全图片 宠物领养协议书范本模板大全图片下载">宠物领养协议书范本模板大全图片 宠物领养协议书范本模板大全图片下载</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-high-speed-nodes.htm" title="12月27日→18.1M/S|2025年最新免费节点Clash XW订阅链接地址">12月27日→18.1M/S|2025年最新免费节点Clash XW订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-50855.htm" title="宠物粮食代加工骗局曝光 宠物粮食代加工骗局曝光视频">宠物粮食代加工骗局曝光 宠物粮食代加工骗局曝光视频</a></li>
                        <li class="py-2"><a href="/news/article-53493.htm" title="Vite2+Vue3+ts的eslint设置踩坑">Vite2+Vue3+ts的eslint设置踩坑</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-19-free-node-subscribe-links.htm" title="2月19日→21.3M/S|2025年最新免费节点Shadowrocket/V2ray/Clash/SSR订阅链接地址">2月19日→21.3M/S|2025年最新免费节点Shadowrocket/V2ray/Clash/SSR订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-40355.htm" title="@Requestbody踩坑">@Requestbody踩坑</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">59</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <footer class="footer-area">
        <div class="footer-bottom black-bg-2 pb-25 pt-25">
            <div class="container">
                <div class="copyright text-center">
                    <p>
                        <a href="/">首页</a> |
                        <a href="/free-node/">免费节点</a> |
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">Clash XW免费机场节点分享官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- all js here -->
    <script src="/assets/website/js/frontend/clashxw/vendor/jquery-1.12.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashxw/popper.js"></script>
    <script src="/assets/website/js/frontend/clashxw/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxw/ajax-mail.js"></script>
    <script src="/assets/website/js/frontend/clashxw/plugins.js"></script>
    <script src="/assets/website/js/frontend/clashxw/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>